{"version":3,"sources":["webpack://gatsby-starter-zoe-app/./src/templates/post-archives.jsx"],"names":["data","basePathBlog","pageContext","posts","allMdxPost","nodes","years","forEach","post","y","createdTime","split","push","layout","title","minH","justifyContent","textAlign","description","length","Object","keys","sort","a","b","map","index","mt","as","fontSize","ml","type","items","item","excerpt","href","purePath","slug","containerProps","h","spacing","trailing","display","alignItems","w","color","useColorModeValue","leading"],"mappings":"g3BAmDA,UA1CiB,SAAC,GAA6C,IAA3CA,EAA0C,EAA1CA,KAAqBC,EAAqB,EAApCC,YAAeD,aAEjCE,EAAQH,EAAKI,WAAWC,MAG1BC,EAAQ,GAOZ,OANAH,EAAMI,SAAQ,SAACC,GACb,IAAIC,EAAID,EAAKE,YAAYC,MAAM,KAAK,GAC/BL,EAAMG,KAAIH,EAAMG,GAAK,IAC1BH,EAAMG,GAAGG,KAAKJ,MAGT,gBAAC,IAAD,CAAQK,OAAO,UAAUC,MAAM,MAEpC,gBAAC,UAAD,CAAUC,KAAK,sBAAsBC,eAAe,GAAGC,UAAU,OAC/DH,MAAM,OAAOI,YAAW,KAAOf,EAAMgB,OAAb,QAIvBC,OAAOC,KAAKf,GAAOgB,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAID,KAAGE,KAAI,SAAChB,EAAGiB,GAAJ,OAC9C,gBAAC,KAAD,CAAKC,GAAG,QACN,gBAAC,IAAD,CAASC,GAAG,KAAKC,SAAS,UAAUpB,GACpC,gBAAC,KAAD,CAAKkB,GAAG,OAAOG,GAAG,QAChB,gBAAC,IAAD,CAAWC,KAAK,OAAOC,MAAO1B,EAAMG,GAAGgB,KAAI,SAACQ,GAAD,cACtCA,GADsC,IAEzCf,YAAae,EAAKf,aAAee,EAAKC,QACtCC,MAAMC,OAAYnC,EAAJ,IAAoBgC,EAAKI,WAEzCC,eAAgB,CAACC,EAAG,MAAOC,QAAQ,IACnCC,SAAU,gBAAW/B,EAAX,EAAGV,KAAQU,aAAX,mBACR,gBAAC,IAAD,CAAMgC,QAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC9CZ,GAAG,OAAOa,WAAW,SAASC,EAAE,cAChCC,OAAOC,uBAAkB,WAAY,aACnC,gBAAC,IAAD,KAAOpC,EAAYC,MAAM,KAAK,MAEpCoC,QAAS,kBAAI,MAAM7B,YAAa,kBAAI","file":"component---src-templates-post-archives-jsx-bcf1d1d922eda1832ea1.js","sourcesContent":["import { Box, Flex, Heading, HStack, Link, Text, useColorModeValue } from \"@chakra-ui/react\"\nimport { graphql } from \"gatsby\"\nimport React from \"react\"\nimport ItemsView from \"../components/itemsView\"\nimport MLink from \"../components/link\"\nimport MSection from \"../components/section\"\nimport Layout from \"../layouts/default\"\nimport { purePath } from \"../utils/helper\"\n\nconst PostList = ({ data, pageContext: { basePathBlog } }) => {\n\n  const posts = data.allMdxPost.nodes\n\n  // generate group by year or year-month\n  let years = {}\n  posts.forEach((post) => {\n    let y = post.createdTime.split(\"-\")[0]\n    if (!years[y]) years[y] = []\n    years[y].push(post)\n  })\n\n  return <Layout layout=\"default\" title=\"博客\">\n    {/* TODO: use BlogsList widget */}\n    <MSection minH=\"calc(100vh - 20rem)\" justifyContent=\"\" textAlign=\"left\"\n      title=\"文章归档\" description={`共 ${posts.length} 篇文章`}>\n      {/* <HStack my=\"2rem\" spacing=\"5\" justifyContent=\"flex-end\">\n        <MLink href=\"tags\">全部标签</MLink>\n      </HStack> */}\n      {Object.keys(years).sort((a, b) => b - a).map((y, index) => (\n      <Box mt=\"2rem\">\n        <Heading as=\"h3\" fontSize=\"1.5rem\">{y}</Heading>\n        <Box mt=\"2rem\" ml=\"2rem\">\n          <ItemsView type=\"tile\" items={years[y].map((item) => ({\n            ...item,\n            description: item.description || item.excerpt,\n            href: purePath(`${basePathBlog}/${item.slug}`),\n          }))}\n          containerProps={{h: null}} spacing=\"5\"\n          trailing={({ data: { createdTime }, ...props}) => (\n            <Flex display={[\"none\", \"none\", \"flex\", \"flex\", \"flex\"]}\n              ml=\"1rem\" alignItems=\"center\" w=\"fit-content\"\n              color={useColorModeValue(\"gray.400\", \"gray.700\")}>\n                <Text>{createdTime.split(\"T\")[0]}</Text>\n            </Flex>)}\n          leading={()=>null} description={()=>null} />\n        </Box>\n      </Box>))}\n    </MSection>\n  </Layout>\n}\n\nexport default PostList\n\n// ($formatString: String!)\n// (formatString: $formatString)\nexport const query = graphql`\n  query {\n    allMdxPost(\n      sort: { fields: createdTime, order: DESC }\n    ) {\n      nodes {\n        slug\n        title\n        createdTime\n        modifiedTime\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}