{"version":3,"sources":["webpack://gatsby-starter-zoe-app/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://gatsby-starter-zoe-app/./src/components/cover.jsx","webpack://gatsby-starter-zoe-app/./src/components/itemsView.jsx","webpack://gatsby-starter-zoe-app/./src/views/seo.jsx","webpack://gatsby-starter-zoe-app/./src/views/logo.jsx","webpack://gatsby-starter-zoe-app/./src/components/nav.jsx","webpack://gatsby-starter-zoe-app/./src/views/nav.jsx","webpack://gatsby-starter-zoe-app/./src/layouts/default/header.jsx","webpack://gatsby-starter-zoe-app/./src/layouts/default/footer.jsx","webpack://gatsby-starter-zoe-app/./src/layouts/default/index.jsx","webpack://gatsby-starter-zoe-app/./src/styles/colors.js","webpack://gatsby-starter-zoe-app/./src/utils/helper.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","module","exports","fn","self","this","args","arguments","apply","err","undefined","__esModule","title","src","color","p","h","props","baseColor","genColor","slice","charCodeAt","bgColor","useColorModeValue","isTruncated","fontWeight","fontSize","textAlign","defaultLeading","data","banner","borderRadius","defaultTrailing","defaultTitle","href","as","defaultSubTitle","defaultDescription","description","_viewTypeContainers","grid","SimpleGrid","columns","spacing","containerProps","flexDirection","leadingProps","bodyProps","mt","tile","VStack","w","overflow","mr","flex","display","alignItems","leading","trailing","trailingProps","titleProps","descriptionProps","subTitle","subTitleProps","type","items","viewContainer","React","children","map","item","index","pure","bg","meta","siteMeta","useSiteMetadata","lang","titleTemplate","logo","version","primaryColor","name","img","sup","colorScheme","PCNav","navs","colorMode","useColorMode","length","mx","trigger","role","_hover","ChevronDownIcon","ml","_groupHover","transform","transition","style","width","icon","textDecoration","colors","size","SMNav","useState","isOpen","setIsOpen","toggle","onOpen","onClose","SmallClose","Hamburger","sx","my","flexDir","border","fixed","wraperBg","logoProps","position","top","borderBottomWidth","zIndex","left","right","px","margin","justifyContent","disableBorder","disableGotop","disableLogo","disableSocials","disableLinks","copyright","author","links","socials","borderTopStyle","borderTopWidth","pt","pb","expend","Socials","flexWrap","maxWidth","header","footer","extendFooter","_maxWidth","Array","isArray","_with","minH","content","a","replace"],"mappings":"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","file":"ae0d7838046948705c4f8fe106a064369a906e86-ac05ad7d230c3c1b2689.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { Box, Center, Heading, Image, Text, useColorModeValue } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { colors, genColor } from \"../styles/colors\"\nimport MImage from \"./image\"\n\n\nconst Cover = ({ title=\"\", src, color=\"white\", p=2, h=[\"10rem\", \"15rem\"], ...props }) => {\n    const baseColor = genColor(title.slice(0).charCodeAt() || 0)\n    return src ? <MImage h={h} src={src} {...props} /> : <Center\n        bgColor={useColorModeValue(`${baseColor}.200`, `${baseColor}.700`)}\n        h={h} color={color} p={p} {...props}>\n        <Heading isTruncated\n            fontWeight={props.fontWeight||\"bold\"}\n            fontSize={props.fontSize||\"1rem\"}\n            textAlign={props.textAlign||\"center\"}>{title}</Heading>\n    </Center>\n    return <MImage h={h} src={src} {...props} fallback={\n        <Center bgColor={useColorModeValue(`${baseColor}.200`, `${baseColor}.700`)} h={h} color={color} p={p} {...props}>\n            <Heading isTruncated\n                fontWeight={props.fontWeight||\"bold\"}\n                fontSize={props.fontSize||\"1rem\"}\n                textAlign={props.textAlign||\"center\"}>{title}</Heading>\n        </Center>} />\n}\n\nexport default Cover","import { Box, Flex, Heading, SimpleGrid, Text, useColorModeValue, VStack } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport Cover from \"./cover\"\nimport MLink from \"./link\"\n\nconst defaultLeading = ({ data: {title, banner}, ...props }) => {\n    return <Cover borderRadius=\".5rem\" title={title} src={banner} {...props} />\n}\n\nconst defaultTrailing = ({ data, ...props }) => {\n    return null\n}\n\nconst defaultTitle = ({ data: {title, href}, ...props }) => {\n    return <Heading isTruncated as=\"h4\" fontSize=\"1rem\" {...props}>{title}</Heading>\n}\n\nconst defaultSubTitle = ({ data, ...props }) => {\n    return null\n}\n\nconst defaultDescription = ({ data: {description}, ...props } ) => {\n    return <Text isTruncated fontSize=\".9rem\" color={useColorModeValue(\"gray.700\", \"gray.200\")} {...props}>{description}</Text>\n}\n\nconst _viewTypeContainers = {\n    grid: {\n        as: SimpleGrid,\n        props: {\n            columns: [1, 1, 2, 3],\n            spacing: 10,\n        },\n        containerProps: {\n            flexDirection: \"column\",\n            textAlign: \"left\"\n        },\n        leadingProps: {},\n        bodyProps: {\n            mt: \"2\"\n        }\n    },\n    tile: {\n        as: VStack,\n        props: {\n            spacing: 8,\n        },\n        containerProps: {\n            flexDirection: \"row\",\n            textAlign: \"left\",\n            w: \"100%\",\n            // h: [\"4rem\", \"6rem\"],\n            overflow: \"hidden\"\n        },\n        leadingProps: {\n            h: [\"4rem\", \"6rem\"],\n            w: [\"5rem\", \"8rem\"],\n            fontSize: [\".7rem\", \".9rem\"],\n            mr: 5,\n        },\n        bodyProps: {\n            flex: 1,\n            overflow: \"hidden\",\n\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            flexDirection: \"column\",\n        }\n    }\n}\n\nconst ItemsView = ({\n    containerProps = {},\n\n    leading = defaultLeading,\n    leadingProps = {},\n\n    trailing = defaultTrailing,\n    trailingProps = {},\n\n    bodyProps = {},\n\n    title = defaultTitle,\n    titleProps = {},\n\n    description = defaultDescription,\n    descriptionProps = {},\n\n    subTitle = defaultSubTitle,\n    subTitleProps = {},\n\n    type = \"grid\",\n    items = [],\n\n    ...props\n}) => {\n    const viewContainer = _viewTypeContainers[type]\n    if (!viewContainer) return <Box p=\"2\" bg=\"red\" color=\"white\">Uknown view type {type}!</Box>\n    \n    return React.createElement(viewContainer.as, {\n        children: items.map((item, index) => (<Flex key={index} {...viewContainer.containerProps} {...containerProps}>\n            {React.createElement(leading, { data: item, ...viewContainer.leadingProps, ...leadingProps })}\n            <Box {...viewContainer.bodyProps} {...bodyProps}>\n                <MLink pure href={item.href} w=\"100%\">\n                {React.createElement(title, { data: item, ...titleProps, isTruncated: type !== \"grid\" })}\n                </MLink>\n                <MLink pure href={item.href} w=\"100%\">\n                {React.createElement(description, { data: item, ...descriptionProps, isTruncated: type !== \"grid\" })}\n                </MLink>\n                {React.createElement(subTitle, { data: item, ...subTitleProps })}\n            </Box>\n            {React.createElement(trailing, { data: item, ...trailingProps })}\n        </Flex>)),\n        ...viewContainer.props,\n        ...props,\n    })\n}\n\nexport default ItemsView","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nimport SEO from '../components/seo'\n\nimport { useSiteMetadata } from \"../utils/hooks\"\n\nconst SEOO = ({ description, meta, title }) => {\n    const siteMeta = useSiteMetadata()\n    return <SEO\n        lang={ siteMeta.lang }\n        title={ title || siteMeta.title }\n        titleTemplate={`%s | ${siteMeta.title}`}\n        meta={ meta }\n        description={ description || siteMeta.description } />\n}\n\nSEOO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n}\n\nexport default SEOO","import { Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport Logo from \"../components/logo\";\n\nimport { useSiteMetadata } from \"../utils/hooks\";\n\nconst ViewLogo = ({ ...props }) => {\n    const { title, logo, version, description, primaryColor } = useSiteMetadata();\n    return (\n        <Flex w=\"fit-content\">\n            <Logo\n                name={title}\n                description={description}\n                img={logo}\n                sup={version}\n                colorScheme={primaryColor}\n                {...props}\n            />\n        </Flex>\n    );\n};\n\nexport default ViewLogo","import { SmallCloseIcon, HamburgerIcon, TriangleDownIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar, Box, Flex, Heading, Icon, IconButton, Link, Popover, PopoverArrow, PopoverBody, PopoverCloseButton, PopoverContent, PopoverHeader, PopoverTrigger, SimpleGrid, Text, useColorMode, useColorModeValue, VStack } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nimport { colors } from \"../styles/colors\";\nimport MLink from \"./link\";\n\n// no need to handle with recuive,\n// because we only handle 2 level\n\nconst PCNav = ({ navs = [], ...props }) => {\n    // responsive return\n    const { colorMode } = useColorMode()\n    return <Flex {...props}>\n        {navs.map(({ title, href, items }, index) => {\n            return (!items || items.length === 0) ?\n                // just return link or text\n                <Flex fontWeight=\"bold\" mx=\".6rem\" key={index}>\n                    {href\n                    ? <MLink pure href={href} _hover={{}}>{title}</MLink>\n                    : <Text>{title}</Text>}\n                </Flex>\n            : <Flex mx=\".6rem\" key={index}>\n                <Popover trigger=\"hover\">\n                    <PopoverTrigger>\n                        <Flex fontWeight=\"bold\" role=\"group\" alignItems=\"center\">\n                            {href\n                                ? <MLink pure href={href} _hover={{}}>{title}</MLink>\n                                : <Text>{title}</Text>}\n                            <Icon as={ChevronDownIcon} ml=\".2rem\"\n                                _groupHover={{\n                                    transform: \"rotate( -180deg )\",\n                                    transition: \"all 0.2s ease-out\"\n                                }} />\n                        </Flex>\n                    </PopoverTrigger>\n\n                    {/* TODO: use size lg */}\n                    <PopoverContent style={{width: \"var(--chakra-sizes-lg)\"}}>\n                        <PopoverArrow />\n                        <PopoverBody style={{width: \"var(--chakra-sizes-lg)\"}}>\n                            <SimpleGrid columns={2} spacing={4}>\n                                {items.map(({title, description, href, icon, color}, index) => <Flex key={index}>\n                                    <MLink pure href={href} _hover={{textDecoration: \"none\"}} w=\"100%\">\n                                        <Flex w=\"100%\"\n                                            key={index}\n                                            p=\"2\" borderRadius=\".5rem\"\n                                            transition=\"all .3s ease-in-out\"\n                                            _hover={{bg: `${color||colors[index%colors.length]||'gray'}.${colorMode === \"light\" ? \"100\" : \"700\"}`}}>\n                                            <Avatar mr=\".5rem\" size=\"xs\" src={icon} name={title} />\n                                            <Box>\n                                                <Text fontSize=\"1rem\" fontWeight=\"bold\">{title}</Text>\n                                                <Text fontSize=\".8rem\" color={useColorModeValue(\"gray.700\", \"gray.200\")}>{description}</Text>\n                                            </Box>\n                                        </Flex>\n                                    </MLink>\n                                </Flex>)}\n                            </SimpleGrid>\n                        </PopoverBody>\n                    </PopoverContent>\n                </Popover>\n            </Flex>\n        })}\n    </Flex>\n}\n\nconst SMNav = ({ navs = [], ...props }) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const toggle = () => setIsOpen(!isOpen)\n    return <Popover trigger=\"click\" onOpen={toggle} onClose={toggle} {...props}>\n        <PopoverTrigger>\n            <IconButton\n                borderRadius=\"full\"\n                display={props.display}\n                transition=\"all .3s ease-in-out\"\n                icon={isOpen?<SmallCloseIcon />:<HamburgerIcon />} />\n        </PopoverTrigger>\n        <PopoverContent display={props.display} h=\"100vh\" sx={{ width: \"100vw\", overflow: \"auto\"}}>\n            <PopoverBody>\n                <VStack my=\"5\" alignItems=\"flex-start\" spacing={5}>\n                    {navs.map(({ title, href, items }, index) => {\n                        return (!items || items.length === 0) ?\n                            // just return link or text\n                            <Flex fontWeight=\"bold\" mx=\".6rem\" key={index}>\n                                {href\n                                ? <MLink pure href={href} _hover={{}}>{title}</MLink>\n                                : <Text>{title}</Text>}\n                            </Flex>\n                        : <Flex mx=\".6rem\" key={index} flexDir=\"column\">\n                            <Flex fontWeight=\"bold\">\n                                {href\n                                    ? <MLink pure href={href} _hover={{}}>{title}</MLink>\n                                    : <Text>{title}</Text>}\n                            </Flex>\n                            <VStack mt=\"1rem\" ml=\"1rem\" alignItems=\"flex-start\">\n                                {items.map(({title, description, href, icon, color}, index) => <Flex key={index}>\n                                    <Avatar mr=\".5rem\" size=\"xs\" src={icon} name={title} />\n                                    <Text fontSize=\".875rem\">{title}</Text>\n                                </Flex>)}\n                            </VStack>\n                        </Flex>\n                    })}\n                </VStack>\n            </PopoverBody>\n        </PopoverContent>\n    </Popover>\n}\n\nconst Nav = (props) => {\n    return <Flex alignItems=\"center\" mr=\"1rem\">\n        <PCNav display={[\"none\", \"none\", \"none\", \"flex\"]} {...props} />\n        <SMNav display={[\"flex\", \"flex\", \"flex\", \"none\"]} {...props} />\n    </Flex>\n}\n\nexport default Nav;","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nimport Nav from '../components/nav'\n\nimport { useSiteMetadata } from \"../utils/hooks\"\n\nconst Navv = (props) => {\n    const { navs } = useSiteMetadata()\n    return <Nav navs={ navs } { ...props } />\n}\n\nNavv.propTypes = {\n    onToggle: PropTypes.func\n}\n\nexport default Navv","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { Box, Flex, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\nimport Logo from \"../../views/logo\";\nimport ColorModeSwitcher from \"../../components/colormode\";\nimport Navv from \"../../views/nav\";\n\nconst Header = ({ children, border, fixed, wraperBg, logoProps, ...props }) => {\n    // TODO: fixed header with scroll\n    // TODO: navigation urls\n\n    const { colorMode } = useColorMode();\n    return (\n            <Flex as=\"header\"\n                w=\"100%\"\n                position={fixed?\"fixed\":null}\n                top=\"0\"\n                borderBottomWidth={border ? \"1px\" : \"0\"}\n                // bg=\"white\" // TODO: scroll header height to set bg white or layout bg\n                bg={wraperBg}\n                zIndex=\"9999\"\n                bg={colorMode === \"light\"\n                    ? \"var(--chakra-colors-white)\"\n                    : \"var(--chakra-colors-gray-800)\"}\n            >\n                <Flex\n                    h={[\"3em\", \"3.5em\", \"4em\", \"4.5em\"]}\n                    left=\"0\"\n                    right=\"0\"\n                    top=\"0\"\n                    px={[\"1em\", \"0\", \"0\", \"0\"]}\n                    margin=\"0 auto\"\n                    alignItems=\"center\"\n                    {...props}\n                >\n                    {/* Logo  display={[\"none\", \"none\", \"none\", \"flex\"]} */} \n                    <Logo {...logoProps} />\n                    <Flex flex=\"1\" justifyContent=\"flex-end\">\n                        {/* Nav Menu */}\n                        <Navv />\n                        {/* <Logo minimal display={[\"flex\", \"flex\", \"flex\", \"none\"]} {...logoProps} /> */}\n                        {/* Other */}\n                        <ColorModeSwitcher />\n                    </Flex>\n                </Flex>\n            </Flex>\n    );\n};\n\nHeader.propTypes = {\n    menuOpend: PropTypes.bool,\n    onToggle: PropTypes.func,\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport { Box, SimpleGrid } from \"@chakra-ui/react\";\n\nimport { useSiteMetadata } from \"../../utils/hooks\";\nimport { Socials } from \"../../components/socials\";\nimport Logo from \"../../views/logo\";\nimport GoTop from \"../../components/gotop\";\nimport Navlinks from \"../../components/navlinks\";\nimport Copyright from \"../../components/copyright\";\n\nconst Footer = ({\n    children,\n    disableBorder,\n    disableGotop,\n    disableLogo,\n    disableSocials,\n    disableLinks,\n    logoProps = {},\n    ...props\n}) => {\n    const {\n        copyright,\n        primaryColor,\n        author,\n        links = [],\n        socials = {},\n    } = useSiteMetadata();\n    return (\n        <Box\n            w=\"100%\"\n            borderTopStyle=\"solid\"\n            borderTopWidth={!disableBorder ? \"1px\" : \"0\"}\n        >\n            <Box\n                left=\"0\"\n                right=\"0\"\n                top=\"0\"\n                px={[\"1em\", \"0\", \"0\", \"0\"]}\n                pt=\"2rem\"\n                pb=\"1rem\"\n                margin=\"0 auto\"\n                position=\"relative\"\n                borderTopStyle=\"solid\"\n                {...props}\n            >\n                {/* back to top button */}\n                {!disableGotop && <GoTop colorScheme={primaryColor} />}\n\n                {/* extend section */}\n                {children}\n\n                {/* footer main section */}\n                {/* TODO: use links to section generate grid layout */}\n                <SimpleGrid\n                    w=\"100%\"\n                    mt={[\".5rem\", \".7rem\", \".7rem\", \"1rem\"]}\n                    columns={[1, 1, 3, 4]}\n                    spacing=\"1rem\"\n                >\n                    <Box>\n                        {/* logo */}\n                        {!disableLogo && <Logo expend={true} {...logoProps} />}\n                        {/* social links */}\n                        {!disableSocials && <Socials mt=\"1rem\" socials={socials} />}\n                    </Box>\n\n                    {/* nav links */}\n                    {!disableLinks && <Navlinks links={links} />}\n                </SimpleGrid>\n\n                {/* copyright */}\n                <Copyright\n                    flexWrap=\"wrap\"\n                    mt=\"2rem\"\n                    copyright={copyright}\n                    author={author}\n                />\n            </Box>\n        </Box>\n    );\n};\n\nFooter.propTypes = {};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\n\nimport SEO from \"../../views/seo\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport { _withBackground } from \"../../components/_with\";\nimport { useSiteMetadata } from \"../../utils/hooks\";\n\nconst { maxWidth = [\"100%\", \"80%\", \"80%\", \"80%\", \"60rem\"] } = useSiteMetadata();\n\nconst Layout = ({\n    title,\n    description,\n    header = {},\n    footer = {},\n    fixed = true,\n    children,\n    extendFooter,\n    // maxWidth = \"60rem\",\n    ...props\n}) => {\n    const _maxWidth = Array.isArray(maxWidth)\n        ? maxWidth\n        : [\"100%\", \"80%\", \"80%\", \"80%\", maxWidth];\n\n    // TODO: make this configurable\n    const lightBg = {\n        size: \"cover\",\n        repeat: \"repeat-x\",\n        attachment: \"scroll\",\n        image: \"images/bg-shapes.svg\",\n    };\n\n    // const [opened, setOpened] = useState(false);\n    // background-image: url(\"https://assets.website-files.com/5e1c4fb5db4d5243c0021d34/5e1c4fb5db4d526c44021d44_bg-shapes.svg\");\n    return (\n        <_withBackground minH=\"calc(100vh)\">\n            {/* inject seo header */}\n            <SEO\n                title={title}\n                description={description}\n                meta={[\n                    {\n                        name: \"viewport\",\n                        content:\n                            \"width=device-width, initial-scale=1.0, minimum-scale=1.0\",\n                    },\n                ]}\n            />\n            {/* header */}\n            <Header fixed={fixed} w={_maxWidth} {...header} />\n            {/* main body */}\n            <Box as=\"main\" pt={fixed?[\"3em\", \"3.5em\", \"4em\", \"4.5em\"]:null}>\n                {children}\n            </Box>\n            {/* footer */}\n            <Footer w={_maxWidth} {...footer}>\n                {extendFooter}\n            </Footer>\n        </_withBackground>\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    extendFooter: PropTypes.node,\n};\n\n// multi layout and register with layouts\n\nexport default Layout;\n","\n\nexport const colors = [\n    'green', 'teal', 'blue',\n    'red', 'orange', 'yellow',\n    'cyan', 'purple', 'pink'\n]\n\nexport const genColor = (a) => colors[a % colors.length]","\nexports.mdxResolverPassthrough = (fieldName) => async (source, args, context, info) => {\n    const type = info.schema.getType(`Mdx`);\n    const mdxNode = context.nodeModel.getNodeById({\n      id: source.parent,\n    });\n    const resolver = type.getFields()[fieldName].resolve;\n    const result = await resolver(mdxNode, args, context, {\n      fieldName,\n    });\n    return source[fieldName] || result;\n}\n\nexports.purePath = (a) => a.replace(/\\/\\/+/g, \"/\")"],"sourceRoot":""}